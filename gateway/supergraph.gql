schema
  @core(feature: "https://specs.apollo.dev/core/v0.2"),
  @core(feature: "https://specs.apollo.dev/join/v0.1", for: EXECUTION)
{
  query: Query
  mutation: Mutation
}

directive @core(as: String, feature: String!, for: core__Purpose) repeatable on SCHEMA

directive @join__field(graph: join__Graph, provides: join__FieldSet, requires: join__FieldSet) on FIELD_DEFINITION

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

directive @join__owner(graph: join__Graph!) on INTERFACE | OBJECT

directive @join__type(graph: join__Graph!, key: join__FieldSet) repeatable on INTERFACE | OBJECT

type Mutation {
  createPost(content: String!, title: String!): Post! @join__field(graph: FORUM)
  login(email: String!, password: String!): User! @join__field(graph: AUTHENTICATION)
  signUp(user: UserInput): User! @join__field(graph: AUTHENTICATION)
}

type Post {
  _id: ID!
  content: String!
  createdById: ID!
  title: String!
}

type Query {
  posts: [Post!]! @join__field(graph: FORUM)
}

type User {
  _id: ID!
  createdAt: Float!
  email: String!
  firstname: String!
  lastname: String!
  token: String
  updatedAt: Float!
}

input UserInput {
  email: String!
  firstname: String!
  lastname: String!
  password: String!
  role: String!
}

enum core__Purpose {
  """
  `EXECUTION` features provide metadata necessary to for operation execution.
  """
  EXECUTION

  """
  `SECURITY` features provide metadata necessary to securely resolve fields.
  """
  SECURITY
}

scalar join__FieldSet

enum join__Graph {
  AUTHENTICATION @join__graph(name: "authentication" url: "http://localhost:4002")
  FORUM @join__graph(name: "forum" url: "http://localhost:4005")
}
